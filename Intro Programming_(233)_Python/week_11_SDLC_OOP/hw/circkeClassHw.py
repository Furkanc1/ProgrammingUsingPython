"""
Using the code you created in class:

Create a class named Circle. Create a constructor which accepts one value,
the radius of the circle. Establish methods for computing diameter, area and perimeter. 

Your code is required to do the following
1.  Ask a user to input the radius of a circle or "q" to quit
2.  Create the circle using your class constructor
3.  Use the methods and compute the diameter, area and perimeter of the circle
4. Print the following information to the screen in the format below:
    
    Please input a radius of a circle in feet or q to quit: 5
    Your circle radius is 5.0
    Your circle diameter is 10.00 ft.
    Your circle area is 78.54 ft.
    Your circle circumference is 31.42 ft.

5. Create an empty list and using the .append() or .extend() method, append each of the values to the list.
The list should contain the radius, diameter, area and perimeter for each circle generated by the user

6. If the user selects "q" , print out :
    
    "You opted to quit, thanks for using this program
    Your stored values for each circle are: "Radius, Diameter, Area, Circumference"
   Print the contents of your list to the screen

7. All code must contain comments explaining your logic. Code wihout comments will not
OOP-Circle-Coskun
be accepted

"""

# Creating a Circle Class

# import math to use math.pi for 3.1415.....
import math

# creation of Circle Class
class Circle:
    # create the circle object, taking in radius as a parameter
    def __init__(self, radius):
        # defining the radius parameter as the objects self.radius
        self.radius = radius
    
    # find perimeter function: (taking in the object(self) as parameter)
    def findCircumference(self):

        # perimeter found using simple math equation: 2*pi*r (round it to 2 decimals)
        perimeter = round((2 * math.pi * self.radius), 2)
        
        return perimeter
        # print statement: to give perimeter value
        # print(f"Based on the radius: {self.radius}, the perimeter is {perimeter} ")

    # find area function: taking in object(self) as parameter
    def findArea(self):

        # area found using equation PI * R^2 (round it to 2 decimals)
        area = round(( math.pi * (self.radius * self.radius)), 2)
        return area
        # print statement: to give area value
        # print(f"Based on the radius: {self.radius}, the area is: {area} ")
    
    # diameter function
    def findDiameter(self):
        
        # diameter equation
        diameter = round( 2 * self.radius)

        # return diameter for using in other file
        return diameter